// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
provider = "prisma-client-js"
}

datasource db {
provider = "mysql"
url = env("DATABASE_URL")
relationMode = "prisma"
}

model User {
  id Int @id @default(autoincrement()) 
  email String @unique
  password String? 
  nickname String 
  avatarImg String?
  score Int @default(0)
  totalTime Int @default(0)
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt 

  attendance Attendance?
  studyList Study[]
  memberList Member[]
  alarmList Alarm[]
}

model Study{
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId],references: [id],onDelete: Cascade)
  userId Int
  title String
  category CATEGORY
  studyName String
  content String @db.MediumText
  icon Int
  studyStatus StudyStatus @default(RECRUIT)
  targetTime Int @default(0)
  tel String
  views Int @default(0)
  startDate DateTime
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt 
  hashTagList HashTag[]
  memberList Member[]
  diaryList Diary[]
  alarmList Alarm[]
  @@index([userId])
}


model HashTag{
  id Int @id @default(autoincrement())
  study Study @relation(fields: [studyId],references: [id],onDelete: Cascade)
  studyId Int
  tagName String
  @@index([studyId])
}

model Member{
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId],references: [id],onDelete: Cascade)
  study Study @relation(fields: [studyId],references: [id],onDelete: Cascade)
  userId Int
  studyId Int
  diaryList Diary[]

  @@index([userId])
  @@index([studyId])
}

model Diary{
  id Int @id @default(autoincrement())
  member Member @relation(fields: [memberId],references: [id],onDelete: Cascade)
  study Study @relation(fields: [studyId],references: [id],onDelete: Cascade)
  memberId Int
  studyId Int
  content String @db.MediumText
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt 

   @@index([memberId])
   @@index([studyId])
}

model Attendance{
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId],references: [id],onDelete: Cascade)
  userId Int @unique
  checkIn DateTime? 
  log DateTime?
  todayTime Int @default(0)
}

model Alarm{
  id Int @id @default(autoincrement())
  user User @relation(fields: [senderId],references: [id],onDelete: Cascade)
  study Study @relation(fields: [studyId],references: [id],onDelete: Cascade)
  studyId Int
  senderId Int
  receiverId Int
  state ALARMSTATE
  createdAt DateTime @default(now()) 

  @@index([studyId])
  @@index([senderId])
}

enum CATEGORY{
  LANGUAGE
  EMPLOYMENT
  HOBBY
  PUBLIC
  ETC
}

enum ALARMSTATE{
  APPROVE
  REFUSE
  CHECK
}

enum StudyStatus{
  RECRUIT
  PROGRESS
  COMPLETE
}